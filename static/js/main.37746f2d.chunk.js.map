{"version":3,"sources":["assets/images/x.png","assets/images/o.png","assets/images/settings.svg","components/settings/settings.js","views/HomePage/HomePage.js","views/HomePage/index.js","views/ChooseSide/ChooseSide.js","views/ChooseSide/index.js","views/GameScreen/GameScreen.js","views/GameScreen/index.js","router/appRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","withRouter","props","className","src","require","alt","onClick","history","push","HomePage","redirectToChooseSide","val","pathname","state","opponent","ChooseSide","useState","side","setSide","id","value","type","name","checked","onChange","e","target","location","GameScreen","didMount","setDidMount","Array","size","fill","array","setArray","turn","setTurn","winnerFound","setWinnerFound","CurrentIndex","setCurrentIndex","announceWinner","winner","toUpperCase","setTimeout","alert","handleClick","index","slice","TicTacToe","map","element","rowIndex","key","useEffect","i","Math","floor","j","checkWinner","includes","random","fillRandomBlock","Container","exact","path","component","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.37746f2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/x.ff2919c6.png\";","module.exports = __webpack_public_path__ + \"static/media/o.0aeae337.png\";","module.exports = __webpack_public_path__ + \"static/media/settings.05560aeb.svg\";","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./settings.css\";\nfunction Settings(props) {\n  return (\n    <div className=\"setting-container\">\n      <img\n        src={require(\"../../assets/images/settings.svg\")}\n        alt=\"settings\"\n        onClick={() => props.history.push(\"/\")}\n      />\n    </div>\n  );\n}\n\nexport default withRouter(Settings);\n","import React from \"react\";\nimport Settings from \"../../components/settings/settings\";\nimport \"../../assets/css/common.css\"\n\nfunction HomePage(props) {\n  function redirectToChooseSide(val) {\n    props.history.push({pathname:\"/choose-side\",state:{opponent:val}});\n  }\n  return (\n    <div className=\"parent\">\n      <div className=\"flex align-center column container\">\n        <div className=\"flex mb-15\">\n          <img\n            src={require(\"../../assets/images/x.png\")}\n            alt=\"cross\"\n            className=\"icons\"\n          />\n          <img\n            src={require(\"../../assets/images/o.png\")}\n            alt=\"zero\"\n            className=\"icons \"\n          />\n        </div>\n        <h3 className=\"mb-10\">Choose your play mode</h3>\n        <button className=\"mb-3 theme\" onClick={()=>redirectToChooseSide(\"ai\")}>\n          With AI\n        </button>\n        <button className=\"white mb-12\" onClick={()=>redirectToChooseSide(\"friend\")}>\n          With a friend\n        </button>\n        <Settings/>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import HomePage from \"./HomePage\";\n\nexport default HomePage;\n","import React, { useState } from \"react\";\nimport \"./ChooseSide.css\";\nimport \"../../assets/css/common.css\";\n\nfunction ChooseSide(props) {\n  const [side, setSide] = useState(\"cross\");\n  return (\n    <div className=\"parent\">\n      <div className=\"flex align-center column container\">\n        <h3 className=\"mb-20\">Pick your side</h3>\n        <div className=\"flex mb-20\">\n          <div\n            className={`mr-5 flex column align-center ${\n              side === \"zero\" && \"transition-opacity\"\n            }`}\n          >\n            <img\n              src={require(\"../../assets/images/x.png\")}\n              alt=\"cross\"\n              className=\"icons mb-12\"\n            />\n            <label className=\"radio\">\n              <input\n                id=\"cross\"\n                value=\"cross\"\n                type=\"radio\"\n                name=\"type\"\n                checked={side === \"cross\"}\n                onChange={(e) => {\n                  setSide(e.target.value);\n                }}\n              />\n              <span className=\"outer\">\n                <span className=\"inner\"></span>\n              </span>\n            </label>\n          </div>\n          <div\n            className={`flex column align-center ${\n              side === \"cross\" && \"transition-opacity\"\n            }`}\n          >\n            <img\n              src={require(\"../../assets/images/o.png\")}\n              alt=\"zero\"\n              className=\"icons mb-12\"\n            />\n            <label className=\"radio\">\n              <input\n                id=\"zero\"\n                type=\"radio\"\n                name=\"type\"\n                value=\"zero\"\n                checked={side === \"zero\"}\n                onChange={(e) => {\n                  setSide(e.target.value);\n                }}\n              />\n              <span className=\"outer\">\n                <span className=\"inner\"></span>\n              </span>\n            </label>\n          </div>\n        </div>\n        <button\n          className=\"white\"\n          onClick={() => {\n            props.history.push({\n              pathname: \"/game\",\n              state: { ...props.location.state, side: side },\n            });\n          }}\n        >\n          Continue\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChooseSide;\n","import ChooseSide from \"./ChooseSide\";\n\nexport default ChooseSide;\n","import React, { useState, useEffect } from \"react\";\nimport Settings from \"../../components/settings/settings\";\n\n//styles\nimport \"../../assets/css/common.css\";\nimport \"./GameScreen.css\";\n\nfunction GameScreen(props) {\n  const name = \"Alex\";\n  const size = 3;\n  const [didMount, setDidMount] = useState(false);\n  const [array, setArray] = useState(new Array(size * size).fill(0));\n  const [turn, setTurn] = useState(true);\n  const [winnerFound, setWinnerFound] = useState(false);\n  const [CurrentIndex, setCurrentIndex] = useState(null);\n\n  const announceWinner = (val) => {\n    val = val === \"x\" ? \"cross\" : \"zero\";\n    let winner =\n      props.location.state && props.location.state.side !== val\n        ? props.location.state.opponent.toUpperCase()\n        : \"ALEX\";\n    setTimeout(() => {\n      alert(winner + \" WON\");\n    }, 200);\n    setWinnerFound(winner === \"ALEX\" ? \"1-0\" : \"0-1\");\n  };\n\n  const checkWinner = (val) => {\n    let i = Math.floor(CurrentIndex / size);\n    let j = CurrentIndex % size;\n\n    //check row\n    for (let j = 0; j < size; j++) {\n      if (array[i * size + j] !== val) break;\n      if (j === size - 1) {\n        announceWinner(val);\n      }\n    }\n\n    //check col\n    for (let i = 0; i < size; i++) {\n      if (array[i * size + j] !== val) break;\n      if (i === size - 1) {\n        announceWinner(val);\n      }\n    }\n\n    //check diag\n    if (i === j) {\n      for (let i = 0; i < size; i++) {\n        if (array[i * size + i] !== val) break;\n        if (i === size - 1) {\n          announceWinner(val);\n        }\n      }\n    }\n\n    //check anti diag (thanks rampion)\n    if (i + j === size - 1) {\n      for (let i = 0; i < size; i++) {\n        if (array[i * size + size - 1 - i] !== val) break;\n        if (i === size - 1) {\n          announceWinner(val);\n        }\n      }\n    }\n    setTurn(!turn);\n  };\n\n  const handleClick = (index) => {\n    setCurrentIndex(index);\n    if (array[index] || winnerFound) return;\n    let val =\n      props.location.state && props.location.state.side === \"zero\"\n        ? turn\n          ? \"o\"\n          : \"x\"\n        : turn\n        ? \"x\"\n        : \"o\";\n    setArray([\n      ...array.slice(0, index),\n      val,\n      ...array.slice(index + 1, size * size),\n    ]);\n  };\n\n  useEffect(() => {\n    didMount &&\n      !winnerFound &&\n      checkWinner(\n        props.location.state && props.location.state.side === \"zero\"\n          ? turn\n            ? \"o\"\n            : \"x\"\n          : turn\n          ? \"x\"\n          : \"o\"\n      );\n    // eslint-disable-next-line\n  }, [array]);\n\n  const fillRandomBlock = () => {\n    let index;\n    do {\n      index = Math.floor(Math.random() * 9);\n    } while (array[index] !== 0);\n    setTimeout(() => {\n      setCurrentIndex(index);\n      handleClick(index);\n    }, 700);\n  };\n\n  useEffect(() => {\n    if (didMount) {\n      if (\n        props.location.state.opponent === \"ai\" &&\n        !turn &&\n        !winnerFound &&\n        array.includes(0)\n      ) {\n        fillRandomBlock();\n      }\n    } else {\n      setDidMount(true);\n    }\n    // eslint-disable-next-line\n  }, [turn]);\n\n  function TicTacToe() {\n    return (\n      <table>\n        <tbody>\n          {new Array(size).fill(0).map((element, rowIndex) => {\n            return (\n              <tr key={rowIndex}>\n                {new Array(size).fill(0).map((element, index) => {\n                  return (\n                    <td\n                      key={index}\n                      onClick={() => {\n                        handleClick(rowIndex * size + index);\n                      }}\n                      className={\n                        rowIndex === size - 1 && index === size - 1\n                          ? \"\"\n                          : rowIndex === size - 1\n                          ? \"border-right\"\n                          : index === size - 1\n                          ? \"border-bottom\"\n                          : \"border-bottom border-right\"\n                      }\n                    >\n                      {array[rowIndex * size + index] === \"x\" ? (\n                        <img\n                          src={require(\"../../assets/images/x.png\")}\n                          alt=\"cross\"\n                          className=\"table-icon\"\n                        />\n                      ) : array[rowIndex * size + index] === \"o\" ? (\n                        <img\n                          src={require(\"../../assets/images/o.png\")}\n                          alt=\"cross\"\n                          className=\"table-icon\"\n                        />\n                      ) : null}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n  return (\n    <div className=\"parent\">\n      <div className=\"flex align-center column container\">\n        <div className=\"flex align-center mb-6\">\n          <h3 className={turn ? \"theme-color mr-5\" : \"mr-5\"}>{name}</h3>\n          <button className=\"white mr-5 bold w-25\">\n            {winnerFound ? winnerFound : \"0 - 0\"}\n          </button>\n          <h3 className={turn ? \"\" : \"theme-color\"}>\n            {props.location.state.opponent === \"ai\" ? \"AI\" : \"Friend\"}\n          </h3>\n        </div>\n        <TicTacToe />\n        <Settings />\n      </div>\n    </div>\n  );\n}\n\nexport default GameScreen;\n","import GameScreen from \"./GameScreen\";\n\nexport default GameScreen;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"../views/HomePage\";\nimport ChooseSide from \"../views/ChooseSide\";\nimport GameScreen from \"../views/GameScreen\";\n\nfunction Container() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/choose-side\" component={ChooseSide} />\n      <Route exact path=\"/game\" component={GameScreen} />\n    </Switch>\n  );\n}\nexport default Container;\n","import React from \"react\";\nimport \"./App.css\";\nimport AppRouter from \"./router/appRouter\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}